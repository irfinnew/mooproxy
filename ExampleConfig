# This is an example configuration file for mooproxy.
# It contains all configurable options, all set to the same defaults that are
# hardcoded into mooproxy.
#
# You need to change at least listenport and auth_md5hash before you can
# use mooproxy.



# The port to accept connections from clients on
listenport = -1
# An MD5 hash of the authentication string clients must give after
# connecting to mooproxy. Use mooproxy --md5crypt to create the hash.
auth_md5hash = ""

# The address of the MOO server to connect to
host = ""
# The port to connect to on the above host
port = -1
# If set to true, mooproxy will automatically try to log you in after
# connecting to the MOO server. It uses the authentication string the
# client gave mooproxy for this purpose.
autologin = false

# Lines starting with this string are interpreted as commands
commandstring = "/"
# Messages from mooproxy are prefixed by this string. In the string the
# following sequences have special meaning:
#     %b  ->  blue                %m  ->  magenta
#     %c  ->  cyan                %r  ->  red
#     %g  ->  green               %w  ->  white
#     %k  ->  black               %y  ->  yellow
# Use uppercase to get the bold/bright variant (e.g., %B is bold/bright blue).
# Use %% to get a literal %.
infostring = "%c%% "

# Log output from the server to the client?
logging_enabled = true

# When a client connects, mooproxy can reproduce lines from history to
# the client, in order to provide the user with context.
# This setting sets the number of recalled lines.
context_on_connect = 100

# The maximum amount of memory in KB used to hold history lines (lines you have
# already read) and new lines (lines you have not yet read).
max_buffer_size = 4096
# The maximum amount of memory in KB used to hold loggable lines that have not
# yet been written to disk. If your disk space runs out, and the amount of
# unlogged lines exceed this amount of memory, new lines will NOT be logged.
# Therefore, it's recommended to keep this value large-ish.
max_logbuffer_size = 4096

# If mooproxy receives a string from the client that starts with the
# commandstring, but is not a valid command, this setting says what to do.
# If it's set to true, mooproxy will complain that the command is invalid.
# If it's set to false, mooproxy will send the string to the server as
# if it was a regular line.
strict_commands = true

# If set to true, all lines written to the logfiles are prepended with a
# timestamp of the form [HH:MM:SS].
timestamped_logs = true
